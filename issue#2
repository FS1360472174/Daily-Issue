***Cause***
1.ConcurrentLinkQueue 的remove 方法有问题
remove方法只是将queue中的值设为null了,而并没有将他从queue中移除导致了出现了问题

***JDK Resolve***
https://bugs.openjdk.java.net/browse/JDK-8054446
old:
          public boolean remove(Object o) {
                  if (o == null) return false;
                  Node<E> pred = null;
                  for (Node<E> p = first(); p != null; p = succ(p)) {
                      E item = p.item;
                      if (item != null &&
                          o.equals(item) &&
                          p.casItem(item, null)) {
                          Node<E> next = succ(p);
                          if (pred != null && next != null)
                              pred.casNext(p, next);
                          return true;
                      }
                      pred = p;
                  }
                  return false;
              }
              
              
new:
  public boolean remove(Object o) {
        if (o != null) {
            Node<E> next, pred = null;
            for (Node<E> p = first(); p != null; pred = p, p = next) {
                boolean removed = false;
                next = succ(p);
                E item = p.item;
                if (item != null) {
                    if (!o.equals(item))
                        continue;
                    removed = casItem(p, item, null);
                }

                // unlink
                if (pred != null && next != null)
                    casNext(pred, p, next);
                if (removed)
                    return true;
            }
        }
        return false;
    }


***cassandra resolve****
这个bug jdk修复版本是在jdk9中
cassanda 自己修复了一个版本
org.apache.cassandra.utils.concurrent.Ref
         #private final ConcurrentLinkedQueue<State> locallyExtant = new ConcurrentLinkedQueue<>();
         private final Collection<State> locallyExtant = new ConcurrentLinkedDeque<>();
就是将ConcurrentLinkedQueue类变成了ConcurrentLinkedDeque

**another**
open this ticket https://issues.apache.org/jira/browse/CASSANDRA-11460
这里遇到的问题和上面提到的修复的问题不是同一个问题
Summary:
out-of-memory caused by ConcurrentLinkedQueue,i think it is duplicate with bugCASSANDRA-9549,now I understand I make a mistake.
Cassandra9549 caused by Ref.class,and resolved.
my issue caused by SEPExecutor.class
protected final ConcurrentLinkedQueue> tasks = new ConcurrentLinkedQueue<>();

I just see tasks.add method,but not remove operation,so is this one of the reason?

ConcurrentLinkedQueue is non-blocking,and due to my poor cassandra cluster environment.
if it cannot consume as fast as produce,it will also increase and then Out-of-Memory.is that right?
